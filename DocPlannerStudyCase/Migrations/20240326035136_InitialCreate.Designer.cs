// <auto-generated />
using System;
using DocPlannerStudyCase.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocPlannerStudyCase.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240326035136_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("DocPlannerStudyCase.Models.Entities.BookVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientSurname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VisitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BookVisits");
                });

            modelBuilder.Entity("DocPlannerStudyCase.Models.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BranchId")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HospitalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HospitalName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BranchId = 29532.990000000002,
                            CreatedAt = new DateTime(2022, 4, 29, 5, 25, 52, 521, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2133),
                            Gender = 0,
                            HospitalId = 150,
                            HospitalName = "Medicana Avcilar",
                            Name = "Mr. Ahmet Öz",
                            Nationality = "TUR",
                            SpecialtyId = 81036,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            BranchId = 29532.990000000002,
                            CreatedAt = new DateTime(2022, 4, 29, 5, 25, 52, 521, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2148),
                            Gender = 0,
                            HospitalId = 150,
                            HospitalName = "Medicana Avcilar",
                            Name = "Ahmet Pınar",
                            Nationality = "TUR",
                            SpecialtyId = 81036,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            BranchId = 45145.080000000002,
                            CreatedAt = new DateTime(2021, 12, 29, 23, 34, 25, 337, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2153),
                            Gender = 1,
                            HospitalId = 160,
                            HospitalName = "MedicalPark İzmir",
                            Name = "Yasemin Öztürk",
                            Nationality = "TUR",
                            SpecialtyId = 81036,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            BranchId = 49875.589999999997,
                            CreatedAt = new DateTime(2022, 4, 30, 7, 5, 6, 158, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2158),
                            Gender = 1,
                            HospitalId = 160,
                            HospitalName = "MedicalPark Kadiköy",
                            Name = "Kübra Işık",
                            Nationality = "TUR",
                            SpecialtyId = 18741,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            BranchId = 19747.48,
                            CreatedAt = new DateTime(2021, 5, 28, 0, 24, 21, 743, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2162),
                            Gender = 1,
                            HospitalId = 150,
                            HospitalName = "Medicana Sisli",
                            Name = "Aynur Aslan",
                            Nationality = "TUR",
                            SpecialtyId = 20746,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            BranchId = 94982.389999999999,
                            CreatedAt = new DateTime(2021, 7, 28, 16, 55, 8, 598, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2168),
                            Gender = 1,
                            HospitalId = 54892,
                            HospitalName = "Memorial",
                            Name = "Elena Morissette",
                            Nationality = "DE",
                            SpecialtyId = 88071,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            BranchId = 19747.48,
                            CreatedAt = new DateTime(2021, 6, 14, 21, 1, 30, 325, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2172),
                            Gender = 0,
                            HospitalId = 23701,
                            HospitalName = "Medicana Sisli",
                            Name = "Hamdi Öztürk",
                            Nationality = "TUR",
                            SpecialtyId = 9090,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            BranchId = 46998.739999999998,
                            CreatedAt = new DateTime(2021, 8, 27, 7, 4, 58, 976, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2176),
                            Gender = 0,
                            HospitalId = 58497,
                            HospitalName = "American Hospital",
                            Name = "Craig O'Keefe",
                            Nationality = "USA",
                            SpecialtyId = 39708,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            BranchId = 5663.6400000000003,
                            CreatedAt = new DateTime(2022, 3, 12, 18, 47, 42, 275, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2181),
                            Gender = 1,
                            HospitalId = 1058,
                            HospitalName = "Ege Hastanesi",
                            Name = "Aysun Çoşkun",
                            Nationality = "TUR",
                            SpecialtyId = 82688,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            BranchId = 5663.6400000000003,
                            CreatedAt = new DateTime(2022, 5, 9, 22, 12, 58, 359, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2185),
                            Gender = 0,
                            HospitalId = 1058,
                            HospitalName = "Ege Hastanesi",
                            Name = "Cesar Batz",
                            Nationality = "ITA",
                            SpecialtyId = 13798,
                            Status = 1
                        });
                });

            modelBuilder.Entity("DocPlannerStudyCase.Models.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppointmentStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DoctorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VisitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentStatus = 1,
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2322),
                            DoctorId = 3,
                            EndTime = new DateTime(2022, 5, 31, 13, 45, 0, 0, DateTimeKind.Local),
                            StartTime = new DateTime(2022, 5, 31, 13, 30, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            VisitId = 551231
                        },
                        new
                        {
                            Id = 2,
                            AppointmentStatus = 1,
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2329),
                            DoctorId = 3,
                            EndTime = new DateTime(2022, 6, 1, 13, 45, 0, 0, DateTimeKind.Local),
                            StartTime = new DateTime(2022, 6, 1, 13, 30, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            VisitId = 252312
                        },
                        new
                        {
                            Id = 3,
                            AppointmentStatus = 1,
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2336),
                            DoctorId = 3,
                            EndTime = new DateTime(2022, 6, 1, 13, 55, 0, 0, DateTimeKind.Local),
                            StartTime = new DateTime(2022, 6, 1, 13, 45, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            VisitId = 652123
                        },
                        new
                        {
                            Id = 4,
                            AppointmentStatus = 1,
                            CreatedDate = new DateTime(2024, 3, 26, 6, 51, 35, 297, DateTimeKind.Local).AddTicks(2342),
                            DoctorId = 3,
                            EndTime = new DateTime(2022, 6, 1, 19, 50, 0, 0, DateTimeKind.Local),
                            StartTime = new DateTime(2022, 6, 1, 19, 30, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            VisitId = 923112
                        });
                });

            modelBuilder.Entity("DocPlannerStudyCase.Models.Entities.Schedule", b =>
                {
                    b.HasOne("DocPlannerStudyCase.Models.Entities.Doctor", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");
                });
#pragma warning restore 612, 618
        }
    }
}
